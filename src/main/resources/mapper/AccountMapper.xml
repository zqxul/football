<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.finance.lottery.mapper.AccountMapper">

    <resultMap id="accountResultMap" type="Account">
        <id column="account_id" property="id"/>
        <result column="account_amount" property="amount"/>
        <result column="account_available_amount" property="availableAmount"/>
        <result column="account_create_time" property="createTime"/>
    </resultMap>

    <sql id="accountColumns">
	  account_id,
	  account_amount,
	  account_available_amount,
	  account_create_time
    </sql>

    <select id="selectByPrimaryKey" resultMap="accountResultMap" parameterType="java.lang.Integer">
        select
        <include refid="accountColumns"/>
        from t_account
        WHERE
        account_id = #{id} for update
    </select>

    <select id="selectByPrimaryKeyForUpdate" resultMap="accountResultMap" parameterType="java.lang.Integer">
        select
        <include refid="accountColumns"/>
        from t_account
        WHERE
        account_id = #{id}
    </select>

    <select id="selectAll" resultMap="accountResultMap">
        select
        <include refid="accountColumns"/>
        from t_account
    </select>

    <select id="select" resultMap="accountResultMap" parameterType="Account">
        SELECT
        <include refid="accountColumns"/>
        FROM t_account
        <where>
            1=1
            <if test="amount!=null">
                AND account_amount = #{amount}
            </if>
            <if test="availableAmount!=null">
                AND account_available_amount = #{availableAmount}
            </if>
        </where>
        for update
    </select>

    <select id="selectOne" resultMap="accountResultMap" parameterType="Account">
        SELECT
        <include refid="accountColumns"/>
        FROM t_account
        <where>
            1=1
            <if test="amount!=null">
                AND account_amount = #{amount}
            </if>
            <if test="availableAmount!=null">
                AND account_available_amount = #{availableAmount}
            </if>
        </where>
        limit 1
        for update
    </select>

    <select id="selectCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_account
    </select>

    <select id="selectTodayRecord" resultMap="accountResultMap">
        SELECT
        <include refid="accountColumns"/>
        FROM t_account
        WHERE
        date(account_create_time) = curdate()
    </select>

    <insert id="insert" parameterType="Account" useGeneratedKeys="true" keyProperty="id">
		insert into
            t_account(
              account_amount,
              account_available_amount,
              account_create_time
            )
        values
            (
              #{amount,jdbcType = INTEGER},
              #{availableAmount,jdbcType = INTEGER},
              #{createTime,jdbcType = TIMESTAMP}
		    )
	</insert>

    <update id="update" parameterType="Account">
		update t_account
		set
		  account_amount = #{amount},
          account_available_amount = #{availableAmount},
          account_create_time = #{createTime}
		WHERE account_id = #{id}
	</update>

    <update id="updateAmount">
        UPDATE t_account
        SET account_amount = #{amount}
        WHERE account_id = #{accountId}
    </update>
</mapper>